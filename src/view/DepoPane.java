/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.Calisan;
import data.DataSource;
import data.Malzeme;
import data.Stok;
import java.awt.Color;
import java.awt.Point;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import ui.ButtonRenderer;

/**
 *
 * @author Yunus
 */
public class DepoPane extends javax.swing.JPanel {

    /**
     * Creates new form DepoPane
     */
    private DataSource dataSource;
    private ArrayList<Stok> allStok;
    private ArrayList<Calisan> allCalisan;
    private ArrayList<Malzeme> allMalzeme;
    int selectedRow=0;
    public DepoPane() {
        
        initComponents();
        initUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableSide = new javax.swing.JPanel();
        tfSearch = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableStok = new org.jdesktop.swingx.JXTable();
        sidePane = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfMalzemeAdi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfMalzemeCinsi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfCalisanAdi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfCalisanSoyadi = new javax.swing.JTextField();
        cbMalzeme = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        spinMiktar = new javax.swing.JSpinner();
        cbCalisan = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        btnUpdate = new org.jdesktop.swingx.JXButton();
        lblError = new javax.swing.JLabel();
        dPickerKayit = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        btnAdd = new org.jdesktop.swingx.JXButton();
        btnClear = new org.jdesktop.swingx.JXButton();

        setBackground(java.awt.Color.white);

        tableSide.setBackground(new java.awt.Color(67, 160, 71));

        tfSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfSearchKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setText("Arama:");

        jLabel15.setFont(new java.awt.Font("Cinzel Black", 1, 36)); // NOI18N
        jLabel15.setText("STOK ÜRÜNLERİ");

        tableStok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MALZEME ADI", "CİNSİ", "ADET/KİLO", "KAYIT_TARİHİ", "ADI", "SOYADI", "SİL"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableStok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableStokMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableStok);

        javax.swing.GroupLayout tableSideLayout = new javax.swing.GroupLayout(tableSide);
        tableSide.setLayout(tableSideLayout);
        tableSideLayout.setHorizontalGroup(
            tableSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableSideLayout.createSequentialGroup()
                .addGroup(tableSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tableSideLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE))
                    .addGroup(tableSideLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tableSideLayout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tableSideLayout.setVerticalGroup(
            tableSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableSideLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(52, 52, 52)
                .addGroup(tableSideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sidePane.setBackground(java.awt.Color.white);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel1.setText("ID:");

        tfID.setEditable(false);
        tfID.setBackground(java.awt.Color.lightGray);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel2.setText("Malzeme Adı:");

        tfMalzemeAdi.setEditable(false);
        tfMalzemeAdi.setBackground(java.awt.Color.lightGray);
        tfMalzemeAdi.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("Malzeme Cinsi:");

        tfMalzemeCinsi.setEditable(false);
        tfMalzemeCinsi.setBackground(java.awt.Color.lightGray);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel4.setText("Çalışan Adı:");

        tfCalisanAdi.setEditable(false);
        tfCalisanAdi.setBackground(java.awt.Color.lightGray);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setText("Çalışan Soyadı:");

        tfCalisanSoyadi.setEditable(false);
        tfCalisanSoyadi.setBackground(java.awt.Color.lightGray);
        tfCalisanSoyadi.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N

        cbMalzeme.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("Malzeme Seç:");

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel7.setText("Miktar:");

        spinMiktar.setFont(new java.awt.Font("Century Gothic", 1, 16)); // NOI18N

        cbCalisan.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel8.setText("Teslim Alan:");

        btnUpdate.setBackground(new java.awt.Color(255, 152, 0));
        btnUpdate.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnUpdate.setForeground(java.awt.Color.white);
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-update-left-rotation-30.png"))); // NOI18N
        btnUpdate.setText("DÜZENLE");
        btnUpdate.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnUpdate.setMargin(new java.awt.Insets(5, 5, 5, 15));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblError.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblError.setForeground(java.awt.Color.red);
        lblError.setText("ERROR MESSAGE");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setText("Kayıt_Tarihi:");

        btnAdd.setBackground(new java.awt.Color(174, 234, 0));
        btnAdd.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnAdd.setForeground(java.awt.Color.white);
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-add-32.png"))); // NOI18N
        btnAdd.setText("EKLE");
        btnAdd.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        btnAdd.setMargin(new java.awt.Insets(5, 5, 5, 5));
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        btnClear.setBackground(new java.awt.Color(253, 216, 53));
        btnClear.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnClear.setForeground(java.awt.Color.white);
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8-clear-symbol-48.png"))); // NOI18N
        btnClear.setText("TEMİZLE");
        btnClear.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        btnClear.setMargin(new java.awt.Insets(5, 5, 5, 15));
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout sidePaneLayout = new javax.swing.GroupLayout(sidePane);
        sidePane.setLayout(sidePaneLayout);
        sidePaneLayout.setHorizontalGroup(
            sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfMalzemeCinsi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dPickerKayit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(64, 64, 64))
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePaneLayout.createSequentialGroup()
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfCalisanAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfCalisanSoyadi, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sidePaneLayout.createSequentialGroup()
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfMalzemeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(sidePaneLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sidePaneLayout.createSequentialGroup()
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(147, 147, 147))
                    .addGroup(sidePaneLayout.createSequentialGroup()
                        .addComponent(lblError)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sidePaneLayout.createSequentialGroup()
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sidePaneLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(spinMiktar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMalzeme, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbCalisan, 0, 177, Short.MAX_VALUE))
                        .addGap(27, 27, 27))))
        );
        sidePaneLayout.setVerticalGroup(
            sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidePaneLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfMalzemeAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfMalzemeCinsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfCalisanAdi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfCalisanSoyadi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(dPickerKayit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(spinMiktar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbMalzeme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(sidePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbCalisan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblError)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tableSide, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(sidePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tableSide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sidePane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tfSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfSearchKeyReleased
        // TODO add your handling code here:
        String search=tfSearch.getText();
        tabloStokDoldur(search);
    }//GEN-LAST:event_tfSearchKeyReleased

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int miktar=(int) spinMiktar.getValue();
        int calisanIndex = cbCalisan.getSelectedIndex();
        int malzemeIndex = cbMalzeme.getSelectedIndex();
        String stokID=tfID.getText();
        

        Date baslamaTarihi=dPickerKayit.getDate();
        if (miktar>0 && calisanIndex!=-1 && malzemeIndex!=-1 && !stokID.equals("")) {
            int stokNo=Integer.parseInt(tfID.getText());
            Calisan calisan = allCalisan.get(calisanIndex);
            Malzeme malzeme=allMalzeme.get(malzemeIndex);
            Date kayit_tarihi=dPickerKayit.getDate();
            
            Stok stok=allStok.get(selectedRow);
            Stok yeniStok=new Stok(stok.getStokNo(),malzeme.getMalzemeNo(),calisan.getCalisanNo(),kayit_tarihi,miktar);
            Runnable task = () -> {
                dataSource.openConnection();
                boolean control = dataSource.updateStok(yeniStok);
                System.out.println("Stok güncellendi");
                dataSource.closeConnection();
                System.out.println("Thread name:" + Thread.currentThread().getName());
                if (control) {
                    lblError.setVisible(true);
                    lblError.setForeground(Color.green);
                    lblError.setText("Stok güncellendi");
                    tabloStokDoldur("");
                    resetInput();
                } else {
                    lblError.setVisible(true);
                    lblError.setForeground(Color.red);
                    lblError.setText("Stok güncellenirken hata oluştu");
                }
            };
            Thread thread = new Thread(task);
            thread.start();

        } else {
            lblError.setVisible(true);
            lblError.setForeground(Color.red);
            lblError.setText("Gerekli alanları doldurunuz.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableStokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableStokMouseClicked
        // TODO add your handling code here:
        selectedRow = tableStok.getSelectedRow();
        if (allStok.size() > selectedRow && selectedRow >= 0) {
            Stok temp = allStok.get(selectedRow);
            tfID.setText(temp.getStokNo()+"");
            tfMalzemeAdi.setText(temp.malzeme.getMalzemeAdi());
            tfMalzemeCinsi.setText(temp.malzeme.getMalzemeCinsi());
            dPickerKayit.setDate(temp.getKayitTarihi());
            
            tfCalisanAdi.setText(temp.calisan.getfName());
            tfCalisanSoyadi.setText(temp.calisan.getlName());
            spinMiktar.setValue(temp.getMiktar());
            
            cbMalzeme.setSelectedItem(temp.malzeme.getMalzemeAdi()+"   "+temp.malzeme.getMalzemeCinsi());
            cbCalisan.setSelectedItem(temp.calisan.getfName()+" "+temp.calisan.getlName());
            
            Point point = evt.getPoint();
            int column = tableStok.columnAtPoint(point);
            
            if (column == 6) {
                Runnable task = () -> {
                    dataSource.openConnection();
                    dataSource.deleteStok(temp.getStokNo());
                    dataSource.closeConnection();
                    resetInput();
                    tabloStokDoldur("");

                };
                Thread thread = new Thread(task);
                thread.start();
            }
        }
    }//GEN-LAST:event_tableStokMouseClicked

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // TODO add your handling code here:
        int miktar=(int) spinMiktar.getValue();
        int calisanIndex = cbCalisan.getSelectedIndex();
        int malzemeIndex = cbMalzeme.getSelectedIndex();

        Date baslamaTarihi=dPickerKayit.getDate();
        if (miktar>0 && calisanIndex!=-1 && malzemeIndex!=-1) {
            Calisan calisan = allCalisan.get(calisanIndex);
            Malzeme malzeme=allMalzeme.get(malzemeIndex);
            Date kayit_tarihi=dPickerKayit.getDate();
            
            Stok stok=new Stok(malzeme.getMalzemeNo(),calisan.getCalisanNo(),kayit_tarihi,miktar);
            Runnable task = () -> {
                dataSource.openConnection();
                boolean control = dataSource.addStok(stok);
                System.out.println("Stok eklendi");
                dataSource.closeConnection();
                System.out.println("Thread name:" + Thread.currentThread().getName());
                if (control) {
                    lblError.setVisible(true);
                    lblError.setForeground(Color.green);
                    lblError.setText("Stok eklendi");
                    resetInput();
                    tabloStokDoldur("");
                } else {
                    lblError.setVisible(true);
                    lblError.setForeground(Color.red);
                    lblError.setText("Stok eklenirken hata oluştu");
                }
            };
            Thread thread = new Thread(task);
            thread.start();

        } else {
            lblError.setVisible(true);
            lblError.setForeground(Color.red);
            lblError.setText("Gerekli alanları doldurunuz.");
        }
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        // TODO add your handling code here:
        resetInput();
    }//GEN-LAST:event_btnClearMouseClicked

    public void resetInput(){
        spinMiktar.setValue(0);
        tfCalisanAdi.setText("");
        tfCalisanSoyadi.setText("");
        tfMalzemeAdi.setText("");
        tfMalzemeCinsi.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXButton btnAdd;
    private org.jdesktop.swingx.JXButton btnClear;
    private org.jdesktop.swingx.JXButton btnUpdate;
    private javax.swing.JComboBox<String> cbCalisan;
    private javax.swing.JComboBox<String> cbMalzeme;
    private org.jdesktop.swingx.JXDatePicker dPickerKayit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblError;
    private javax.swing.JPanel sidePane;
    private javax.swing.JSpinner spinMiktar;
    private javax.swing.JPanel tableSide;
    private org.jdesktop.swingx.JXTable tableStok;
    private javax.swing.JTextField tfCalisanAdi;
    private javax.swing.JTextField tfCalisanSoyadi;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfMalzemeAdi;
    private javax.swing.JTextField tfMalzemeCinsi;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables

    private void initUI(){
        tabloStokDoldur("");
        initCalisan();
        initMalzeme();
        lblError.setVisible(false);
        tableStok.getColumn("SİL").setCellRenderer(new ButtonRenderer("SİL"));
        
        
    }
    private void tabloStokDoldur(String search) {
        dataSource=new DataSource();
        allStok=new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) tableStok.getModel();
        model.setNumRows(0);
    
        Runnable task = () -> {
            dataSource.openConnection();
            allStok = dataSource.getAllStok(search);
            dataSource.closeConnection();
            if (allStok!=null&&allStok.size() > 0) {
                DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                allStok.forEach((s) -> {
                    model.addRow(new Object[]{s.malzeme.getMalzemeAdi(),s.malzeme.getMalzemeCinsi()
                            ,s.getMiktar(),dateFormat.format(s.getKayitTarihi()),s.calisan.getfName(),
                    s.calisan.getlName()});
                });
            }
        };
        Thread thread = new Thread(task);
        thread.start();
    }

    private void initCalisan() {
        DataSource dataS=new DataSource();
        Runnable task=()->{
            dataS.openConnection();
            allCalisan=dataS.getAllCalisan("");
            dataS.closeConnection();
            cbCalisan.removeAllItems();
            if(allCalisan.size()>0){
                allCalisan.forEach((c)->{
                String item=c.getfName()+" "+c.getlName();
                cbCalisan.addItem(item);
           
            });
            }
            
            
            
        };
        Thread thread=new Thread(task);
        thread.start();
    }

    private void initMalzeme() {
       DataSource dataS=new DataSource();
        Runnable task=()->{
            dataS.openConnection();
            allMalzeme=dataS.getAllMalzemeler("");
            dataS.closeConnection();
            cbMalzeme.removeAllItems();
            if(allMalzeme.size()>0)
            allMalzeme.forEach((m)->{
                String item=m.getMalzemeAdi()+"   "+m.getMalzemeCinsi();
                cbMalzeme.addItem(item);
            });
            
            
        };
        Thread thread=new Thread(task);
        thread.start(); 
    }
}
